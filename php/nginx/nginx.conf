
user  nginx;
worker_processes  auto;
worker_rlimit_nofile 65535;
thread_pool default threads=32 max_queue=65536;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

# load_module /etc/nginx/modules/ngx_http_zstd_filter_module.so;
# load_module /etc/nginx/modules/ngx_http_zstd_static_module.so;

events {
    use  epoll;
    multi_accept  on;
    worker_connections  10240;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    charset       utf-8;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    # keepalive_timeout  65;
    keepalive_timeout  30;
    server_tokens      off;

    #gzip  on;

    # zstd               on;
    # zstd_static        on;
    # zstd_comp_level    4;
    # zstd_buffers       8 256k;
    # zstd_min_length    50;
    # zstd_types  application/atom+xml application/javascript application/json application/vnd.api+json application/rss+xml
    #             application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype
    #             application/x-font-ttf application/x-javascript application/xhtml+xml application/xml
    #             font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon
    #             image/x-icon image/x-win-bitmap text/css text/richtext text/plain text/x-script
    #             text/x-component text/x-java-source text/x-markdown text/javascript text/xml
    #             application/x-perl application/x-httpd-cgi multipart/bag multipart/mixed application/wasm;

    client_max_body_size 1M;

    # 确保Nginx能够高效地处理各种大小的http请求头，避免错误并提高Nginx的处理能力
    client_header_buffer_size 4k;                     # 每个请求头缓冲区的大小为4kb，用于存储请求行和请求头部分
    large_client_header_buffers 4 8k;                 # 请求头过大时Nginx将分配更多缓冲区，此配置中最多分配4个8kb的缓冲区来存储大请求头

    # FastCGI
    # 保留FastCGI缓冲区设置，禁用缓存
    fastcgi_cache                 off;                # 关闭FastCGI缓存
    fastcgi_buffering             on;                 # 启用FastCGI响应缓冲，加速动态请求的处理
    fastcgi_buffer_size           128k;               # 设置FastCGI响应缓冲区大小为128KB
    fastcgi_buffers               16 1024k;           # 设置用于FastCGI响应的缓冲区数量和大小(16个1024KB的缓冲区)
    fastcgi_busy_buffers_size     8m;                 # 设置正在使用的FastCGI缓冲区的最大大小为8MB

    fastcgi_intercept_errors  on;                     # 启用错误拦截使Nginx能够处理FastCGI返回的错误
    fastcgi_hide_header X-Powered-By;                 # 隐藏FastCGI响应头中的X-Powered-By字段

    include /etc/nginx/conf.d/*.conf;
}