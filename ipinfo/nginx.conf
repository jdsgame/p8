
user  nginx;
worker_processes  auto;                            # 设置工作进程数量，通常为CPU核心数
worker_rlimit_nofile 65535;                        # 设置每个工作进程可打开的最大文件描述符数量为 65535
thread_pool default threads=16 max_queue=65536;    # 启动一个默认线程池，分配16个线程来处理请求，并且这个线程池的队列最大长度为65536。这样可以处理更多的并发请求，减少请求等待时间提高系统的吞吐量

error_log  /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

load_module /etc/nginx/modules/ngx_http_zstd_filter_module.so;     # 用于响应内容的Zstandard压缩
load_module /etc/nginx/modules/ngx_http_zstd_static_module.so;     # 用于服务静态文件时的Zstandard压缩
load_module /etc/nginx/modules/ngx_http_brotli_filter_module.so;   # 用于响应内容的Brotli压缩
load_module /etc/nginx/modules/ngx_http_brotli_static_module.so;   # 用于服务静态文件时的Brotli压缩

events {
    multi_accept  on;
    worker_connections  2048;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    charset       utf-8;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log main buffer=512k flush=10s; # 把访问日志使用 main 格式缓存在内存中，缓冲区为 512KB，最多每 10 秒写入一次

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    server_tokens  off;

    # 开启Gzip压缩，减小传输内容大小，提高页面加载速度
    gzip               on;
    gzip_comp_level    4;          # 设置Gzip压缩级别为4(范围为1-9,越高压缩率越高但占用CPU更多)
    gzip_min_length    50;         # 设置进行压缩的最小文件长度为50字节
    gzip_static        on;         # 启用静态文件的Gzip压缩（如果已存在压缩文件，将直接使用）
    gzip_buffers       8 256k;      # 设置用于Gzip压缩的缓冲区数量和大小（64个8k的缓冲区）
    # 指定要压缩的MIME类型
    gzip_types application/atom+xml application/javascript application/json application/vnd.api+json application/rss+xml
               application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype
               application/x-font-ttf application/x-javascript application/xhtml+xml application/xml
               font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon
               image/x-icon image/x-win-bitmap text/css text/richtext text/plain text/x-script
               text/x-component text/x-java-source text/x-markdown text/javascript text/xml
               application/x-perl application/x-httpd-cgi multipart/bag multipart/mixed application/wasm;

    zstd               on;        # 启用zstd压缩
    zstd_static        on;        # 启用静态zstd压缩文件
    zstd_comp_level    4;         # 设置压缩级别为4
    zstd_buffers       8 256k;    # 设置缓冲区数量和大小
    zstd_min_length    50;        # 最小压缩长度为50字节
    # 定义zstd压缩的文件类型
    zstd_types  application/atom+xml application/javascript application/json application/vnd.api+json application/rss+xml
                application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype
                application/x-font-ttf application/x-javascript application/xhtml+xml application/xml
                font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon
                image/x-icon image/x-win-bitmap text/css text/richtext text/plain text/x-script
                text/x-component text/x-java-source text/x-markdown text/javascript text/xml
                application/x-perl application/x-httpd-cgi multipart/bag multipart/mixed application/wasm;

    brotli             on;        # 启用Brotli压缩
    brotli_static      on;        # 启用静态Brotli压缩文件
    brotli_comp_level  4;         # 设置压缩级别为4
    brotli_buffers     8 256k;    # 设置缓冲区数量和大小
    brotli_min_length  50;        # 最小压缩长度为50字节
    brotli_window      1024k;     # 设置压缩窗口大小为1024k
    # 定义Brotli压缩的文件类型
    brotli_types application/atom+xml application/javascript application/json application/vnd.api+json application/rss+xml
                 application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype
                 application/x-font-ttf application/x-javascript application/xhtml+xml application/xml
                 font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon
                 image/x-icon image/x-win-bitmap text/css text/richtext text/plain text/x-script
                 text/x-component text/x-java-source text/x-markdown text/javascript text/xml
                 application/x-perl application/x-httpd-cgi multipart/bag multipart/mixed application/wasm;

    include /etc/nginx/conf.d/*.conf;
}